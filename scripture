#!/bin/sh

# Usage sanitization
[ -z "$1" ] && echo "usage: scripture <deck file>" && exit 1

# TSV by default, otherwise use user's preference
DELIMITER=${SCRIPTURE_DELIMITER:-"	"}

# Determine which cards need to be reviewed
rm /tmp/scripture 2> /dev/null
while read line
do
	# Get epoch time of last review
	output=$(echo "$line" | cut -d"$DELIMITER" -f 6)
	output=$(date +%s -d"$output")

	# See if time since last review outlasts inter_repetition_interval (I)
	# 86400 --> num of seconds in 24 hours
	I=$(echo "$line" | cut -d"$DELIMITER" -f 5)
	time_since=$(echo "$(date +%s) - $output" | bc -l)

	# Does time since last review fulfills I's requirement
	[ $time_since -gt $(echo "$I * 86400" | bc -l) ] && echo "$line" >> /tmp/scripture
done < "$1"

# Review each card
while read line
do
	clear

	# Get the Front and Back of your card
	front=$(echo "$line" | cut -d"$DELIMITER" -f 1)
	back=$(echo "$line" | cut -d"$DELIMITER" -f 2)

	# Get grade (q) from user
	read -p "$front" </dev/tty
	echo "$back"
	echo

    # Loop until user gives a valid answer
	while :
	do
		read -p "Enter your grade (0-5): " q < /dev/tty
		echo $q | grep "^[0-5]$" > /dev/null && break
	done
	
	# SM-2 calculation

	# n - repetition number
	n=$(echo "$line" | cut -d"$DELIMITER" -f 3)
	# EF - easiness factor
	EF=$(echo "$line" | cut -d"$DELIMITER" -f 4)
	# I - interval
	I=$(echo "$line" | cut -d"$DELIMITER" -f 5)

    # Split depending on q >= 3 or not
    # > 2 is the same as >= 3 because we only get integer grades
	correct_response=0
	[ $q -gt 2 ] && correct_response=1
	case $correct_response in
        1) echo "correct response!" ;;
        0) echo "incorrect response!" ;;
	esac

	sleep 1
done < /tmp/scripture
